package com.example.talkingtopics;

import static com.example.talkingtopics.MainActivity.imageButton;
import static com.example.talkingtopics.MainActivity.imageButton2;
import static com.example.talkingtopics.MainActivity.imageButton3;
import static com.example.talkingtopics.MainActivity.spinner;
import static com.example.talkingtopics.MainActivity.spinner2;
import static com.example.talkingtopics.MainActivity.textView;

import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.media.AudioAttributes;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Build;
import android.os.IBinder;
import android.support.v4.media.session.MediaSessionCompat;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.app.NotificationCompat;

import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.ListResult;
import com.google.firebase.storage.StorageReference;

import java.io.IOException;
import java.util.ArrayList;

public class PlayService extends Service {
    SharedPreferences sharedpreferences;
    SharedPreferences.Editor editor;
    MediaPlayer mediaPlayer = null;
    MediaSessionCompat mediaSessionCompat;
    StorageReference mStorageRef;
    public static String text="";
    String subject="", notify="", topic="";
    NotificationManager notificationManager;

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onCreate() {
        super.onCreate();

        sharedpreferences = getSharedPreferences("MyM10", Context.MODE_PRIVATE);
        editor = sharedpreferences.edit();

        if(sharedpreferences.getBoolean("activity",true)){
            disableButtons();

        } {
            keepInSharedPreferences("showButton",0);

        }

        mediaSessionCompat = new MediaSessionCompat(this, "mytagmediam9");
        notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);

        createNotificationChannel();



    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        super.onStartCommand(intent, flags, startId);
        //MainActivity.getTextView().setText("JESUS");
        //textView.setText("JESUS");

        try{
            if(intent.getAction() != null){
                switch (intent.getAction()){
                    case "playPause":
                        playPause();
                        break;
                    case "prev":
                        prev();
                        break;
                    case "next":
                        next();
                        break;

                }
            }else {
                mStorageRef = FirebaseStorage.getInstance().getReference();
                mStorageRef.listAll()
                        .addOnSuccessListener(new OnSuccessListener<ListResult>() {
                            @Override
                            public void onSuccess(ListResult listResult) {
                                ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(getApplicationContext(), android.R.layout.simple_spinner_dropdown_item, new ArrayList<String>());
                                spinner.setAdapter(arrayAdapter);

                                for (StorageReference prefix : listResult.getPrefixes()) {
                                    arrayAdapter.add(prefix.getName());
                                }
                                spinner.setSelection(sharedpreferences.getInt("SubjectPosition", 0));
                            }
                        })
                        .addOnFailureListener(new OnFailureListener() {
                            @Override
                            public void onFailure(@NonNull Exception e) {
                                textView.setText(e.toString());
                            }
                        });


                spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {

                        String subjectName = spinner.getSelectedItem().toString();
                        mStorageRef.child(subjectName).listAll()
                                .addOnSuccessListener(new OnSuccessListener<ListResult>() {
                                    @Override
                                    public void onSuccess(ListResult listResult) {
                                        ArrayAdapter<String> arrayAdapter2 = new ArrayAdapter<String>(getApplicationContext(), android.R.layout.simple_spinner_dropdown_item, new ArrayList<String>());
                                        spinner2.setAdapter(arrayAdapter2);

                                        keepInSharedPreferences("topicSize",listResult.getItems().size());
                                        int i=0;
                                        for (StorageReference item : listResult.getItems()) {
                                            String name = item.getName();
                                            arrayAdapter2.add(name);
                                            keepInSharedPreferences(name,i);
                                            keepStringSharedPreferences(""+i,name);
                                            i=i+1;
                                        }
                                        spinner2.setSelection(sharedpreferences.getInt("TopicPosition", 0));
                                    }
                                })
                                .addOnFailureListener(new OnFailureListener() {
                                    @Override
                                    public void onFailure(@NonNull Exception e) {
                                        textView.setText(e.toString());
                                    }
                                });
                        keepInSharedPreferences("SubjectPosition", i);
                        keepStringSharedPreferences("subject", subjectName);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> adapterView) {

                    }
                });

                spinner2.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {

                        keepInSharedPreferences("TopicPosition", i);
                        keepStringSharedPreferences("topic", spinner2.getSelectedItem().toString());

                        if(sharedpreferences.getInt("play",0)==1){
                            play();
                            keepInSharedPreferences("play",0);
                        }else if (notify.contains("preparing")){
                            disableButtons();
                        }
                        else {
                            enableButtons();
                        }

                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> adapterView) {

                    }
                });

                imageButton2.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        playPause();
                    }
                });
                imageButton.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        prev();
                    }
                });
                imageButton3.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        next();
                    }
                });

            }
//            if(mediaPlayer!=null){
//                if(mediaPlayer.isPlaying())
//                    if(sharedpreferences.getBoolean("activity",true)){
//                    imageButton2.setImageResource(R.drawable.ic_baseline_pause_24);
//                    }else  keepInSharedPreferences("image2",R.drawable.ic_baseline_pause_24);
//
//                text = topic;
//                if(sharedpreferences.getBoolean("activity",true)){
//                    enableButtons();
//
//                }else {
//                    keepInSharedPreferences("showButton",1);
//
//                }
//            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return START_STICKY;
    }

    public void playPause() {
        //Toast.makeText(this,"p",Toast.LENGTH_LONG).show();

        if (mediaPlayer != null && sharedpreferences.getString("topic", "").equals(sharedpreferences.getString("playingTopic", ""))) {
            if (mediaPlayer.isPlaying()) {
                mediaPlayer.pause();
                if(sharedpreferences.getBoolean("activity",true)){
                    imageButton2.setImageResource(R.drawable.ic_baseline_play_arrow_24);
                } keepInSharedPreferences("image2",R.drawable.ic_baseline_play_arrow_24);

                showNotification(true,R.drawable.ic_baseline_play_arrow_24);
            }
            else {
                mediaPlayer.start();
                if(sharedpreferences.getBoolean("activity",true)){
                    imageButton2.setImageResource(R.drawable.ic_baseline_pause_24);
                }  keepInSharedPreferences("image2",R.drawable.ic_baseline_pause_24);

                showNotification( true, R.drawable.ic_baseline_pause_24);
            }

        } else play();

    }

    public void play() {
        topic = sharedpreferences.getString("topic", "");
        subject=sharedpreferences.getString("subject", "");
        notify="preparing "+topic;
        text = notify;

        if(sharedpreferences.getBoolean("activity",true)){
            disableButtons();

        } {
            keepInSharedPreferences("showButton",0);

        }

        showNotification(false,R.drawable.ic_baseline_play_arrow_24);
        if (mediaPlayer != null) {
            mediaPlayer.release();
            mediaPlayer = null;
        }
        mStorageRef.child(subject)
                .child(topic)
                .getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
            @Override
            public void onSuccess(Uri uri) {
                try {
                    mediaPlayer = new MediaPlayer();
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                        mediaPlayer.setAudioAttributes(
                                new AudioAttributes.Builder()
                                        .setContentType(AudioAttributes.CONTENT_TYPE_MUSIC)
                                        .setUsage(AudioAttributes.USAGE_MEDIA)
                                        .build()
                        );
                    }
                    mediaPlayer.setDataSource(getApplicationContext(), uri);
                    mediaPlayer.prepareAsync();

                    mediaPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
                        @Override
                        public void onPrepared(MediaPlayer mediaPlayer) {
                            mediaPlayer.start();
                            text = topic;
                            if(sharedpreferences.getBoolean("activity",true)){
                                enableButtons();
                                imageButton2.setImageResource(R.drawable.ic_baseline_pause_24);

                            } {
                                keepInSharedPreferences("showButton",1);
                                keepInSharedPreferences("image2",R.drawable.ic_baseline_pause_24);
                            }
                            notify=topic;
                            showNotification(true,R.drawable.ic_baseline_pause_24);
                            keepStringSharedPreferences("playingTopic", sharedpreferences.getString("topic", ""));
                        }
                    });
                    mediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
                        @Override
                        public void onCompletion(MediaPlayer mediaPlayer) {

                            if(sharedpreferences.getBoolean("activity",true)){
                                imageButton2.setImageResource(R.drawable.ic_baseline_play_arrow_24);

                            } {
                                keepInSharedPreferences("image2",R.drawable.ic_baseline_play_arrow_24);
                            }
                            showNotification(true,R.drawable.ic_baseline_play_arrow_24);

                        }
                    });
                    mediaPlayer.setOnErrorListener(new MediaPlayer.OnErrorListener() {
                        @Override
                        public boolean onError(MediaPlayer mediaPlayer, int i, int i1) {
                            text = "Try again "+topic;
                            if(sharedpreferences.getBoolean("activity",true)){
                                enableButtons();
                                imageButton2.setImageResource(R.drawable.ic_baseline_play_arrow_24);

                            } {
                                keepInSharedPreferences("showButton",1);
                                keepInSharedPreferences("image2",R.drawable.ic_baseline_play_arrow_24);
                            }
                            notify="Try again "+topic;
                            showNotification(true,R.drawable.ic_baseline_play_arrow_24);
                            return false;
                        }
                    });

                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        mStorageRef.child(subject)
                .child(topic)
                .getDownloadUrl().addOnFailureListener(new OnFailureListener() {
            @Override
            public void onFailure(@NonNull Exception e) {
                text = e.getMessage();
                if(sharedpreferences.getBoolean("activity",true)){
                    enableButtons();
                    imageButton2.setImageResource(R.drawable.ic_baseline_play_arrow_24);

                } {
                    keepInSharedPreferences("showButton",1);
                    keepInSharedPreferences("image2",R.drawable.ic_baseline_play_arrow_24);
                }
                notify=e.getMessage()+"\nTry again "+topic;
                showNotification(true,R.drawable.ic_baseline_play_arrow_24);

            }
        });
    }

    public void prev(){
        int prev = sharedpreferences.getInt("TopicPosition",0)-1;
        if(prev > -1) {

            if(sharedpreferences.getBoolean("activity",true)){
                spinner2.setSelection(prev);
                keepInSharedPreferences("play",1);

            }else {
                keepInSharedPreferences("TopicPosition", prev);
                keepStringSharedPreferences("topic", sharedpreferences.getString(""+prev,""));
                play();
            }
        }
    }

    public void next(){
        int next = sharedpreferences.getInt("TopicPosition",0)+1;
        if(next < sharedpreferences.getInt("topicSize",0)) {

            if(sharedpreferences.getBoolean("activity",true)){
                spinner2.setSelection(next);
                keepInSharedPreferences("play", 1);

            }else {
                keepInSharedPreferences("TopicPosition", next);
                keepStringSharedPreferences("topic", sharedpreferences.getString(""+next,""));
                play();
            }

        }
    }

    private void createNotificationChannel() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            NotificationChannel channel = new NotificationChannel("1", "play", NotificationManager.IMPORTANCE_DEFAULT);
            channel.setDescription("Media controls");
            notificationManager.createNotificationChannel(channel);
        }
    }

    public void showNotification(boolean showButtons, int playPause) {
        Intent notificationIntent = new Intent(this, MainActivity.class);
        PendingIntent contentIntent = PendingIntent.getActivity(this, 0, notificationIntent, PendingIntent.FLAG_CANCEL_CURRENT);

        if(showButtons) {
            PendingIntent playPI,prevPI,nextPI;

            Intent playI = new Intent(this, PlayService.class).setAction("playPause");
            Intent prevI = new Intent(this, PlayService.class).setAction("prev");
            Intent nextI = new Intent(this, PlayService.class).setAction("next");

            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                playPI = PendingIntent.getForegroundService(this, 90, playI, PendingIntent.FLAG_UPDATE_CURRENT);
                prevPI = PendingIntent.getForegroundService(this, 9, prevI, PendingIntent.FLAG_UPDATE_CURRENT);
                nextPI = PendingIntent.getForegroundService(this, 80, nextI, PendingIntent.FLAG_UPDATE_CURRENT);
            }else{
                playPI = PendingIntent.getService(this, 90, playI, PendingIntent.FLAG_UPDATE_CURRENT);
                prevPI = PendingIntent.getService(this, 9, prevI, PendingIntent.FLAG_UPDATE_CURRENT);
                nextPI = PendingIntent.getService(this, 80, nextI, PendingIntent.FLAG_UPDATE_CURRENT);
            }

            Notification notification = new NotificationCompat.Builder(this, "1")
                    .setSmallIcon(R.mipmap.ic_launcher_foreground)
                    .setContentTitle(subject)
                    .setContentText(notify)
                    .setContentIntent(contentIntent)
                    .addAction(R.drawable.ic_baseline_skip_previous_24, "prev", prevPI)
                    .addAction(playPause, "play", playPI)
                    .addAction(R.drawable.ic_baseline_skip_next_24, "next", nextPI)
                    .setStyle(new androidx.media.app.NotificationCompat.MediaStyle()
                            .setMediaSession(mediaSessionCompat.getSessionToken()))
                    .setPriority(NotificationCompat.PRIORITY_LOW)
                    .setOnlyAlertOnce(true)
                    .build();

            notificationManager.notify(1, notification);
        }else{

            Notification notification = new NotificationCompat.Builder(this, "1")
                    .setSmallIcon(R.mipmap.ic_launcher_foreground)
                    .setContentTitle(subject)
                    .setContentText(notify)
                    .setContentIntent(contentIntent)
                    .setPriority(NotificationCompat.PRIORITY_LOW)
                    .setOnlyAlertOnce(true)
                    .build();

            notificationManager.notify(1, notification);
        }

    }


    public void enableButtons(){
        imageButton.setEnabled(true);
        imageButton2.setEnabled(true);
        imageButton3.setEnabled(true);

    }

    public void disableButtons(){
        imageButton.setEnabled(false);
        imageButton2.setEnabled(false);
        imageButton3.setEnabled(false);
    }

    private void keepInSharedPreferences(String keyStr, int valueInt) {
        editor.putInt(keyStr, valueInt);
        editor.apply();
    }

    private void keepStringSharedPreferences(String keyStr1, String valueStr1) {
        editor.putString(keyStr1, valueStr1);
        editor.apply();
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        if (mediaPlayer != null) {
            if(mediaPlayer.isPlaying()) mediaPlayer.stop();
            mediaPlayer.release();
            mediaPlayer = null;
        }
        //Toast.makeText(this,"d",Toast.LENGTH_LONG).show();
    }

    @Override
    public void onTaskRemoved(Intent rootIntent) {
        super.onTaskRemoved(rootIntent);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) stopForeground(true);
        else notificationManager.cancel(1);
        stopSelf();
        //Toast.makeText(this,"t",Toast.LENGTH_LONG).show();

    }

}
